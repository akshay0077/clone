{"version":3,"sources":["StateProvider/StateProvider.js","StateProvider/reducer.js","components/Search.js","pages/Home.js","useGoogleSearch.js","keys.js","pages/SearchPage.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","actionTypes","state","action","console","log","type","term","Search","hideButtons","dispatch","useState","input","setInput","history","useHistory","search","sou","preventDefault","push","className","onChange","target","Button","onClick","variant","Home","to","Avatar","src","style","border","alt","UseGoogleSearch","data","setData","useEffect","a","fetch","then","response","json","result","fetchData","res","catch","error","SearchPage","useGoogleSearch","searchInformation","formattedTotalResults","formattedSearchTime","items","map","item","href","link","pagemap","cse_image","length","displayLink","title","snippet","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.545838ce.chunk.js","sourcesContent":["import React, {createContext, useContext, useReducer} from 'react';\n\n//Preparing the data layer *******************************************\nexport const StateContext = createContext();\n\nexport const StateProvider = ({reducer, initialState, children}) =>\n    (\n\n        <StateContext.Provider value={useReducer(reducer, initialState)}>\n            {children}\n        </StateContext.Provider>\n    );\n\n// Hooks which allows us to pull information form the data layer ****************\nexport const useStateValue = () => useContext(StateContext);\n","export const initialState = {\n    term: null,\n};\n\nexport const actionTypes = {\n    SET_SEARCH_TERM: \"SET_SEARCH_TERM\",\n}\n\nconst reducer = (state, action) => {\n\n    //Console Log ******************************\n    console.log(action);\n\n    switch (action.type) {\n        case actionTypes.SET_SEARCH_TERM:\n            return {\n                ...state,\n                term: action.term,\n            };\n        default:\n            return state;\n    }\n};\nexport default reducer;\n","import React, {useState} from 'react';\nimport \"./Search.css\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport MicIcon from '@material-ui/icons/Mic';\nimport {Button} from '@material-ui/core';\nimport {useHistory} from \"react-router-dom\";\nimport {useStateValue} from \"../StateProvider/StateProvider\";\nimport {actionTypes} from \"../StateProvider/reducer\";\n\nfunction Search({hideButtons = false}) {\n\n    // eslint-disable-next-line no-empty-pattern\n    const [{}, dispatch] = useStateValue();\n\n    const [input, setInput] = useState(\"\");\n    const history = useHistory();\n\n    const search = sou => {\n        sou.preventDefault();\n\n        console.log('Click google search button>>>', input);\n\n        dispatch({\n            type: actionTypes.SET_SEARCH_TERM,\n            term: input\n        })\n\n        history.push(\"/search\");\n    }\n    return (\n        <form className=\"search\">\n            <div className=\"search_input\">\n                <SearchIcon className=\"search_inputIcon\"/>\n                <input\n                    value={input}\n                    onChange={sou => setInput(sou.target.value)}\n                />\n                <MicIcon/>\n            </div>\n            {!hideButtons ? (\n                <div className=\"search_buttons\">\n                    <Button\n                        onClick={search}\n                        type=\"submit\"\n                        variant=\"outlined\"\n                    >Google Search</Button>\n                    <Button variant=\"outlined\">I'm Feeling Lucky</Button>\n                </div>\n            ) : (\n                <div className=\"search_buttons\">\n                    <Button\n                        className=\"search_buttonsHidden\"\n                        onClick={search}\n                        type=\"submit\"\n                        variant=\"outlined\"\n                    >Google Search</Button>\n                    <Button\n                        className=\"search_buttonsHidden\"\n                        variant=\"outlined\"\n                    >I'm Feeling Lucky</Button>\n                </div>\n            )}\n\n        </form>\n    );\n}\n\nexport default Search;\n","import React from 'react';\nimport './Home.css';\nimport {Link} from \"react-router-dom\";\nimport AppsIcon from '@material-ui/icons/Apps';\nimport {Avatar} from '@material-ui/core';\nimport Search from \"../components/Search\";\n\nfunction Home() {\n\n    return (\n        <div className='home'>\n            {/*<h1>This is home page</h1>*/}\n            <div className=\"home_header\">\n                <div className=\"home_headerLeft\">\n                    <Link to=\"/about\">About</Link>\n                    <Link to=\"/store\">Store</Link>\n                </div>\n                <div className=\"home_headerRight\">\n                    <Link to=\"/gmail\">Gmail</Link>\n                    <Link to=\"/images\">Images</Link>\n                    <AppsIcon/>\n                    <Avatar\n                        src=\"https://w7.pngwing.com/pngs/340/946/png-transparent-avatar-user-computer-icons-software-developer-avatar-child-face-heroes-thumbnail.png\"\n                        style={{border: \"1px solid green\"}}\n                    />\n                </div>\n            </div>\n            <div className=\"home_body\">\n                <img\n                    src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2f/Google_2015_logo.svg/368px-Google_2015_logo.svg.png\"\n                    alt=\"\"/>\n                <div className=\"home_inputContainer\">\n                    {/*<Search/>*/}\n                    <Search/>\n                </div>\n            </div>\n            <div className=\"footer\">\n                <h4>Developed by Kher Akshay</h4>\n            </div>\n        </div>\n    );\n\n}\n\nexport default Home;\n","import {useState, useEffect} from 'react';\nimport API_KEY from \"./keys\";\n\n// In This are Present in Akshay Kher Google Account\nconst CONTEXT_KEY = \"9ec571f86697d07ac\";\n\nconst UseGoogleSearch = (term) => {\n\n    const [data, setData] = useState(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            fetch(`https://www.googleapis.com/customsearch/v1?key=${API_KEY}&cx=${CONTEXT_KEY}&q=${term}`)\n                .then(response => response.json())\n                .then(result => {\n                    setData(result)\n                })\n        }\n\n        fetchData().then(res => {\n            console.log(res);\n        }).catch(error => {\n            console.log(error);\n        });\n    }, [term])\n\n    return {data};\n};\n\nexport default UseGoogleSearch;\n","export const API_KEY=\"AIzaSyCYAcUWMUiSRYBMxPlXNgbVUIAZ48mTlfs\"\n\nexport default API_KEY;","import React from 'react';\nimport \"./SearchPage.css\";\nimport {useStateValue} from \"../StateProvider/StateProvider\";\nimport useGoogleSearch from \"../useGoogleSearch\";\n// import Response from \"../response\";\nimport {Link} from \"react-router-dom\";\nimport Search from \"../components/Search\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport ImageIcon from '@material-ui/icons/Image';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\nimport RoomIcon from '@material-ui/icons/Room';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nfunction SearchPage() {\n\n    // eslint-disable-next-line no-unused-vars\n    const [{term}, dispatch] = useStateValue();\n\n    //LIVE API Call *****************************************\n    const {data} = useGoogleSearch(term);\n\n    // const data = Response;\n\n    // https://cse.google.com/cse/create/new\n    console.log(data);\n\n    return (\n        <div className=\"searchPage\">\n            {/*<h1>This is search page WoW!!!!!</h1>*/}\n            <div className=\"searchPage_header\">\n            <Link to=\"/\">\n                    <img\n                        className=\"searchPage_logo\"\n                        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2f/Google_2015_logo.svg/368px-Google_2015_logo.svg.png\"\n                        alt=\"\"/>\n                </Link>\n                <div className=\"searchPage_headerBody\">\n                    <Search hideButtons/>\n                    <div className=\"searchPage_options\">\n\n                        {/*--------searchPage_optionsLeft--------------*/}\n                        <div className=\"searchPage_optionsLeft\">\n                            <div className=\"searchPage_option\">\n                                <SearchIcon/>\n                                <Link to=\"/all\">All</Link>\n                            </div>\n                            <div className=\"searchPage_option\">\n                                <DescriptionIcon/>\n                                <Link to=\"/news\">News</Link>\n                            </div>\n                            <div className=\"searchPage_option\">\n                                <ImageIcon/>\n                                <Link to=\"/images\">Images</Link>\n                            </div>\n                            <div className=\"searchPage_option\">\n                                <LocalOfferIcon/>\n                                <Link to=\"/shopping\">Shopping</Link>\n                            </div>\n                            <div className=\"searchPage_option\">\n                                <RoomIcon/>\n                                <Link to=\"/maps\">Maps</Link>\n                            </div>\n                            <div className=\"searchPage_option\">\n                                <MoreVertIcon/>\n                                <Link to=\"/more\">More</Link>\n                            </div>\n                        </div>\n\n                        {/*--------searchPage_optionsRight--------------*/}\n                        <div className=\"searchPage_optionsRight\">\n                            <div className=\"searchPage_option\">\n                                <Link to=\"/settings\">Settings</Link>\n                            </div>\n                            <div className=\"searchPage_option\">\n                                <Link to=\"/tools\">Tools</Link>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n\n            {term && (\n                <div className=\"searchPage_results\">\n\n                    <p className=\"searchPage_resultCount\">\n                        About {data?.searchInformation.formattedTotalResults} results\n                        ({data?.searchInformation.formattedSearchTime} seconds) for {term}\n                    </p>\n\n                    {data?.items.map(item => (\n                        <div className=\"searchPage_result\">\n                            {/* eslint-disable-next-line react/jsx-no-target-blank */}\n                            <a href={item.link} target=\"_blank\">\n                                {item.pagemap?.cse_image?.length > 0 && item.pagemap?.cse_image[0]?.src && (\n                                    <img\n                                        className=\"searchPage_resultImage\"\n                                        src={item.pagemap?.cse_image?.length > 0 && item.pagemap?.cse_image[0]?.src}\n                                        alt=''\n                                    />\n                                )}\n                                {item.displayLink} ✔\n                            </a>\n                            {/* eslint-disable-next-line react/jsx-no-target-blank */}\n                            <a className=\"searchPage_resultTitle\" href={item.link} target=\"_blank\">\n                                <h2>{item.title}</h2>\n                            </a>\n                            <p className=\"searchPage_resultSnippet\">\n                                {item.snippet}\n                            </p>\n                            <hr/>\n                        </div>\n                    ))}\n\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default SearchPage;\n","import React from 'react';\nimport './App.css';\nimport Home from \"./pages/Home\";\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport SearchPage from \"./pages/SearchPage\";\n\nfunction App() {\n    return (\n        <div className=\"app\">\n            <Router>\n                <Switch>\n                    <Route path=\"/search\">\n                        <SearchPage/>\n                    </Route>\n                    <Route path=\"/\">\n                        <Home/>\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer, {initialState} from \"./StateProvider/reducer\";\nimport {StateProvider} from \"./StateProvider/StateProvider\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <StateProvider initialState={initialState} reducer={reducer}>\n            <App/>\n        </StateProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}